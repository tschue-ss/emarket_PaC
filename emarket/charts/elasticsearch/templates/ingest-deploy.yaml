{{- if .Values.ingest.enabled }}
apiVersion: {{ template "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "elasticsearch.ingest.fullname" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: ingest
    ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
    app: ingest
spec:
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: ingest
  replicas: {{ .Values.ingest.replicas }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: ingest
        ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
        app: ingest
        {{- if .Values.ingest.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.ingest.podLabels "context" $) | nindent 8 }}
        {{- end }}
      {{- with .Values.ingest.podAnnotations }}
      annotations: {{- toYaml . | nindent 10 }}
      {{- end }}
    spec:
      {{- include "elasticsearch.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.ingest.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.ingest.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.ingest.schedulerName }}
      schedulerName: {{ .Values.ingest.schedulerName }}
      {{- end }}
      {{- if .Values.ingest.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.ingest.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.ingest.podAffinityPreset "component" "ingest" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.ingest.podAntiAffinityPreset "component" "ingest" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.ingest.nodeAffinityPreset.type "key" .Values.ingest.nodeAffinityPreset.key "values" .Values.ingest.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.ingest.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.ingest.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.ingest.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.ingest.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.ingest.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.ingest.securityContext.fsGroup }}
      {{- end }}
      {{- if .Values.sysctlImage.enabled }}
      ## Image that performs the sysctl operation to modify Kernel settings (needed sometimes to avoid boot errors)
      initContainers:
        - name: sysctl
          image: {{ include "elasticsearch.sysctl.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command:
            - /bin/bash
            - -ec
            - |
              sysctl -w vm.max_map_count=262144 && sysctl -w fs.file-max=65536
          securityContext:
            privileged: true
          {{- if .Values.sysctlImage.resources }}
          resources: {{- toYaml .Values.sysctlImage.resources | nindent 12 }}
          {{- end }}
      {{- end }}
      containers:
        - name: elasticsearch
          image: {{ include "elasticsearch.image" . }}
          {{- if .Values.ingest.securityContext.enabled }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          securityContext:
            runAsUser: {{ .Values.ingest.securityContext.runAsUser }}
          {{- end }}
          env:
            - name: BITNAMI_DEBUG
              value: {{ ternary "true" "false" .Values.image.debug | quote }}
            - name: ELASTICSEARCH_CLUSTER_NAME
              value: {{ .Values.name | quote }}
            - name: ELASTICSEARCH_CLUSTER_HOSTS
              value: {{ include "elasticsearch.hosts" . | quote }}
            - name: ELASTICSEARCH_TOTAL_NODES
              value: {{ add .Values.master.replicas .Values.data.replicas | quote }}
            {{- if .Values.plugins }}
            - name: ELASTICSEARCH_PLUGINS
              value: {{ .Values.plugins | quote }}
            {{- end }}
            - name: ELASTICSEARCH_HEAP_SIZE
              value: {{ .Values.ingest.heapSize | quote }}
            - name: ELASTICSEARCH_IS_DEDICATED_NODE
              value: "yes"
            - name: ELASTICSEARCH_NODE_TYPE
              value: "ingest"
            {{- if .Values.extraEnvVars }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.extraEnvVars "context" $ ) | nindent 12 }}
            {{- end }}
          {{- if or .Values.extraEnvVarsConfigMap .Values.extraEnvVarsSecret }}
          envFrom:
            {{- if .Values.extraEnvVarsConfigMap }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" ( dict "value" .Values.extraEnvVarsConfigMap "context" $ ) }}
            {{- end }}
            {{- if .Values.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" ( dict "value" .Values.extraEnvVarsSecret "context" $ ) }}
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: 9200
            - name: transport
              containerPort: 9300
          {{- if .Values.ingest.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.ingest.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.ingest.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.ingest.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.ingest.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.ingest.livenessProbe.failureThreshold }}
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
          {{- end }}
          {{- if .Values.ingest.readinessProbe.enabled}}
          readinessProbe:
            initialDelaySeconds: {{ .Values.ingest.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.ingest.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.ingest.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.ingest.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.ingest.readinessProbe.failureThreshold }}
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
          {{- end}}
          {{- if .Values.ingest.resources }}
          resources: {{- toYaml .Values.ingest.resources | nindent 12 }}
          {{- end}}
          volumeMounts:
            {{- if .Values.config }}
            - mountPath: /opt/bitnami/elasticsearch/config/elasticsearch.yml
              name: "config"
              subPath: elasticsearch.yml
            {{- end }}
            - name: "data"
              mountPath: "/bitnami/elasticsearch/data/"
            {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
            {{- if .Values.initScripts }}
            - name: custom-init-scripts
              mountPath: /docker-entrypoint-initdb.d/init-scripts
            {{- end }}
            {{- if .Values.initScriptsCM }}
            - name: custom-init-scripts-cm
              mountPath: /docker-entrypoint-initdb.d/init-scripts-cm
            {{- end }}
            {{- if .Values.initScriptsSecret }}
            - name: custom-init-scripts-secret
              mountPath: /docker-entrypoint-initdb.d/init-scripts-secret
            {{- end }}
      volumes:
        {{- if .Values.config }}
        - name: config
          configMap:
            name: {{ include "common.names.fullname" . }}
        {{- end }}
        - name: data
          emptyDir: {}
        {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
        {{- if .Values.initScripts }}
        - name: custom-init-scripts
          configMap:
            name: {{ template "elasticsearch.initScripts" . }}
        {{- end }}
        {{- if .Values.initScriptsCM }}
        - name: custom-init-scripts-cm
          configMap:
            name: {{ template "elasticsearch.initScriptsCM" . }}
        {{- end }}
        {{- if .Values.initScriptsSecret }}
        - name: custom-init-scripts-secret
          secret:
            secretName: {{ template "elasticsearch.initScriptsSecret" . }}
            defaultMode: 0755
        {{- end }}
{{- end }}
